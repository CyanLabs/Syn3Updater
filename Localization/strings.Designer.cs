//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Syn3Updater.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Syn3Updater.Localization.strings", typeof(strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copying.
        /// </summary>
        internal static string Copying {
            get {
                return ResourceManager.GetString("Copying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading {0} ({1}/{2}).
        /// </summary>
        internal static string Downloading {
            get {
                return ResourceManager.GetString("Downloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download path and destination USB drive are the same, please change your download path..
        /// </summary>
        internal static string FrmMain_CancelledDownload_DownloadPathInvalid {
            get {
                return ResourceManager.GetString("FrmMain_CancelledDownload_DownloadPathInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING, ALL DATA ON THE SELECTED DRIVE WILL BE LOST
        ///{0}
        ///Drive Letter: {1}.
        /// </summary>
        internal static string FrmMain_CancelledDownload_FormatUSB {
            get {
                return ResourceManager.GetString("FrmMain_CancelledDownload_FormatUSB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mode is reformat or downgrade and no apps package has been selected, this will result in a non booting system, ABORTING! No &quot;APPS&quot; package has been selected but Syn3 Updater has determined that a downgrade or reformat is required, this will result in a non booting system. Aborting!.
        /// </summary>
        internal static string FrmMain_CancelledDownload_NoApps {
            get {
                return ResourceManager.GetString("FrmMain_CancelledDownload_NoApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No USB drive selected would you like to continue with just the download?.
        /// </summary>
        internal static string FrmMain_CancelledDownload_NoUSB {
            get {
                return ResourceManager.GetString("FrmMain_CancelledDownload_NoUSB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current region and new region are not the same, this may not work..
        /// </summary>
        internal static string FrmMain_CancelledDownload_RegionMismatch {
            get {
                return ResourceManager.GetString("FrmMain_CancelledDownload_RegionMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to restart application to change language?
        ///If you do not restart some elements may not be translated correctly.
        /// </summary>
        internal static string FrmMain_cmbLocale_Restart {
            get {
                return ResourceManager.GetString("FrmMain_cmbLocale_Restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PROCESS COMPLETE!.
        /// </summary>
        internal static string FrmMain_CopyFiles_Completed {
            get {
                return ResourceManager.GetString("FrmMain_CopyFiles_Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The download and copy of the files is now complete, simply eject this USB from your computer and insert it in your car, make sure the engine is running!
        ///
        ///If you would like further instructions click Yes to open our online guide directly to the relevant in car section.
        ///
        ///Would you like further information?.
        /// </summary>
        internal static string FrmMain_CopyFiles_CompletePopup {
            get {
                return ResourceManager.GetString("FrmMain_CopyFiles_CompletePopup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to update your current sync version in the app so it&apos;s correct for future use?.
        /// </summary>
        internal static string FrmMain_CopyFiles_UpdateVersion {
            get {
                return ResourceManager.GetString("FrmMain_CopyFiles_UpdateVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to verify file 3 times, ensure USB drive and port are fully functional..
        /// </summary>
        internal static string FrmMain_CopyFiles_VerificationFailed {
            get {
                return ResourceManager.GetString("FrmMain_CopyFiles_VerificationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copying {0} ({1}/{2}).
        /// </summary>
        internal static string FrmMain_Copying {
            get {
                return ResourceManager.GetString("FrmMain_Copying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Version: {0} - Region: {1} - Navigation: {2} 
        ///Download Path: {3}.
        /// </summary>
        internal static string FrmMain_CurrentConfiguration {
            get {
                return ResourceManager.GetString("FrmMain_CurrentConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All downloads completed!.
        /// </summary>
        internal static string FrmMain_DownloadFile_AllDownloaded {
            get {
                return ResourceManager.GetString("FrmMain_DownloadFile_AllDownloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drive Name: {0}
        ///Drive Letter: {1}
        ///Filesystem: {2}.
        /// </summary>
        internal static string FrmMain_DriveInfo {
            get {
                return ResourceManager.GetString("FrmMain_DriveInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception has occured, {0}.
        /// </summary>
        internal static string FrmMain_Exception {
            get {
                return ResourceManager.GetString("FrmMain_Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an issue trying to retrieve the list of files from the online server, please check your internet connection and make sure the application has internet access.
        /// </summary>
        internal static string FrmMain_FrmMain_Shown_Extra_BackendError {
            get {
                return ResourceManager.GetString("FrmMain_FrmMain_Shown_Extra_BackendError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notes: {0}.
        /// </summary>
        internal static string FrmMain_Notes {
            get {
                return ResourceManager.GetString("FrmMain_Notes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifying integrity of {0}.
        /// </summary>
        internal static string FrmMain_ValidateFile_Verifying {
            get {
                return ResourceManager.GetString("FrmMain_ValidateFile_Verifying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to move existing files from
        ///{0}
        ///to
        ///{1}.
        /// </summary>
        internal static string FrmSetup_btnChangeDownloadDirectory_ChangeDirectory {
            get {
                return ResourceManager.GetString("FrmSetup_btnChangeDownloadDirectory_ChangeDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will override the detection of the most appropriate install mode using this with a full release with maps will almost certainly cause issues.
        ///
        ///By checking this box you agree to not be eligible for support while this option is enabled!
        ///
        ///Do you wish to force &quot;autoinstall&quot; mode, this will reset on next launch?.
        /// </summary>
        internal static string FrmSetup_ForceAutoInstall {
            get {
                return ResourceManager.GetString("FrmSetup_ForceAutoInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copying {0}.
        /// </summary>
        internal static string LogCopying {
            get {
                return ResourceManager.GetString("LogCopying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating {0} autoinstall.lst.
        /// </summary>
        internal static string LogCreateAutoinstall {
            get {
                return ResourceManager.GetString("LogCreateAutoinstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating {0} reformat.lst.
        /// </summary>
        internal static string LogCreateReformat {
            get {
                return ResourceManager.GetString("LogCreateReformat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading {0}.
        /// </summary>
        internal static string LogDownloading {
            get {
                return ResourceManager.GetString("LogDownloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloads cancelled!.
        /// </summary>
        internal static string LogDownloadsCancelled {
            get {
                return ResourceManager.GetString("LogDownloadsCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to copy/validate {0} , retrying #{1}.
        /// </summary>
        internal static string LogFailed3 {
            get {
                return ResourceManager.GetString("LogFailed3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to verify {0} retrying.
        /// </summary>
        internal static string LogFailedRetry {
            get {
                return ResourceManager.GetString("LogFailedRetry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Re-creating partition table as MBR and formatting as ExFat on selected USB drive.
        /// </summary>
        internal static string LogFormat {
            get {
                return ResourceManager.GetString("LogFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No MD5 value found in database, comparing files size of {0}.
        /// </summary>
        internal static string LogNoMD5 {
            get {
                return ResourceManager.GetString("LogNoMD5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting process ({0} - {1} - {2}).
        /// </summary>
        internal static string LogStart {
            get {
                return ResourceManager.GetString("LogStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success.
        /// </summary>
        internal static string Success {
            get {
                return ResourceManager.GetString("Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully Verified {0}.
        /// </summary>
        internal static string Verified {
            get {
                return ResourceManager.GetString("Verified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifying {0}.
        /// </summary>
        internal static string Verifying {
            get {
                return ResourceManager.GetString("Verifying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        internal static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
    }
}
